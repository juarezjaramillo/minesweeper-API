/*
 * Minesweeper API
 * A simple Minesweeper API for Deviget code challengue
 *
 * OpenAPI spec version: v1
 * Contact: juarezjaramillo@deviget.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MinesweeperApi);
  }
}(this, function(expect, MinesweeperApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Board', function() {
      beforeEach(function() {
        instance = new MinesweeperApi.Board();
      });

      it('should create an instance of Board', function() {
        // TODO: update the code to test Board
        expect(instance).to.be.a(MinesweeperApi.Board);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property numRows (base name: "num_rows")', function() {
        // TODO: update the code to test the property numRows
        expect(instance).to.have.property('numRows');
        // expect(instance.numRows).to.be(expectedValueLiteral);
      });

      it('should have the property numColumns (base name: "num_columns")', function() {
        // TODO: update the code to test the property numColumns
        expect(instance).to.have.property('numColumns');
        // expect(instance.numColumns).to.be(expectedValueLiteral);
      });

      it('should have the property numMines (base name: "num_mines")', function() {
        // TODO: update the code to test the property numMines
        expect(instance).to.have.property('numMines');
        // expect(instance.numMines).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property result (base name: "result")', function() {
        // TODO: update the code to test the property result
        expect(instance).to.have.property('result');
        // expect(instance.result).to.be(expectedValueLiteral);
      });

      it('should have the property created (base name: "created")', function() {
        // TODO: update the code to test the property created
        expect(instance).to.have.property('created');
        // expect(instance.created).to.be(expectedValueLiteral);
      });

      it('should have the property lastStarted (base name: "last_started")', function() {
        // TODO: update the code to test the property lastStarted
        expect(instance).to.have.property('lastStarted');
        // expect(instance.lastStarted).to.be(expectedValueLiteral);
      });

      it('should have the property cells (base name: "cells")', function() {
        // TODO: update the code to test the property cells
        expect(instance).to.have.property('cells');
        // expect(instance.cells).to.be(expectedValueLiteral);
      });

      it('should have the property elapsed (base name: "elapsed")', function() {
        // TODO: update the code to test the property elapsed
        expect(instance).to.have.property('elapsed');
        // expect(instance.elapsed).to.be(expectedValueLiteral);
      });

    });
  });

}));
