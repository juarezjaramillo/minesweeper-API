/*
 * Minesweeper API
 * A simple Minesweeper API for Deviget code challengue
 *
 * OpenAPI spec version: v1
 * Contact: juarezjaramillo@deviget.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MinesweeperApi) {
      root.MinesweeperApi = {};
    }
    root.MinesweeperApi.Cell = factory(root.MinesweeperApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Cell model module.
   * @module model/Cell
   * @version v1
   */

  /**
   * Constructs a new <code>Cell</code>.
   * @alias module:model/Cell
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Cell</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Cell} obj Optional instance to populate.
   * @return {module:model/Cell} The populated <code>Cell</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('row'))
        obj.row = ApiClient.convertToType(data['row'], 'Number');
      if (data.hasOwnProperty('column'))
        obj.column = ApiClient.convertToType(data['column'], 'Number');
      if (data.hasOwnProperty('mine'))
        obj.mine = ApiClient.convertToType(data['mine'], 'Boolean');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'Number');
      if (data.hasOwnProperty('revealed'))
        obj.revealed = ApiClient.convertToType(data['revealed'], 'Boolean');
    }
    return obj;
  }

  /**
   * The row for the cell inside the board
   * @member {Number} row
   */
  exports.prototype.row = undefined;

  /**
   * The column for the cell inside the board
   * @member {Number} column
   */
  exports.prototype.column = undefined;

  /**
   * Indicates if the cell contains a mine
   * @member {Boolean} mine
   */
  exports.prototype.mine = undefined;

  /**
   * The number of adjacent cells that contain a mine
   * @member {Number} value
   */
  exports.prototype.value = undefined;

  /**
   * Indicates if the cell has been revealed
   * @member {Boolean} revealed
   */
  exports.prototype.revealed = undefined;

  return exports;

}));
